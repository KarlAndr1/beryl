
let a = array 1 2 3
let t = table "foo" 1 "bar" 2 "char" 3

assert (a 0) == 1
assert (t "foo") == 1

let x = null

x = map a with x do: x * x
assert (x 0) == 1 (x 1) == 4 (x 2) == 9
assert (a 0) == 1 (a 1) == 2 (a 2) == 3

x = map t with x do: x * x
assert (x "foo") == 1 (x "bar") == 4 (x "char") == 9
assert (t "foo") == 1 (t "bar") == 2 (t "char") == 3

x = try do
	map a with x do if x == 3 do: a + b, else do: x * 2 end
end, catch with x do
	assert x == "Unkown variable"
	"err"
end
assert x == "err"

x = try do
	map t with x do 
		if x == 3 do: a + b, else do: x * 2 
	end
end, catch with x do
	assert x == "Unkown variable"
	print "Caught err 1"
	"err"
end
assert x == "err"

x = try do
	map (array 1 2 3) with x do 
		if x == 3 do: a + b, else do: x * 2 
	end
end, catch with x do
	assert x == "Unkown variable"
	print "Caught err 2"
	"err"
end
assert x == "err"

x = try do
	map (table "foo" 1 "bar" 2 "char" 3) with x do 
		if x == 3 do: a + b, else do: x * 2 
	end
end, catch with x do
	assert x == "Unkown variable"
	print "Caught err 3"
	"err"
end
assert x == "err"
