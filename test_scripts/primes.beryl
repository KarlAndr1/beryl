
let primes = function n do
	# Array of [2 ... N]
	let nums = arrayof n - 1 with i do i + 2 end
	let res = invoke array
	loop do
		let p = nums 0
		res = res push: p
		# Filter out numbers that are divisible by p, i.e keep only those where x mod p =/= 0
		nums = filter nums with x do
			(x mod: p) /= 0
		end
		
		not (empty? nums) # Continue the loop if the nums array is not empty
	end
	res
end


let p = primes 100
assert (sizeof p) == 25
assert (p 0) == 2
assert (p 19) == 71
assert (p 24) == 97
assert (p 11) == 37

# https://en.wikipedia.org/wiki/List_of_prime_numbers
(assert 
	p == (array 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97)
)
